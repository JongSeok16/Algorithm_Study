# 카드 역배치(정올 기출)
# 1부터 20까지 숫자가 하나씩 쓰인 20장의 카드가 오름차순으로 한 줄로 놓 여있다.
# 각 카드의 위치는 카드 위에 적힌 숫자와 같이 1부터 20까지로 나타낸다.
# 이제 여러분은 다음과 같은 규칙으로 카드의 위치를 바꾼다:
# 구간 [a, b] (단, 1 ≤ a ≤ b ≤ 20)가 주어지면
# 위치 a부터 위치 b까지의 카드를 현재의 역순으로 놓는다.
# 예를 들어, 현재 카드가 놓인 순서가 위의 그림과 같고 구간이 [5, 10]으로 주어진다면,
# 위치 5부터 위치 10까지의 카드 5, 6, 7, 8, 9, 10을 역순으로 하여
# 10, 9, 8, 7, 6, 5로 놓는다.
# 이 상태에서 구간 [9, 13]이 다시 주어진다면,
# 위치 9부터 위치 13까지의 카드 6, 5, 11, 12, 13을 역순으로 하여
# 13, 12, 11, 5, 6으로 놓는다.
# 오름차순으로 한 줄로 놓여있는 20장의 카드에 대해 10개의 구간이 주어지면,
# 주어진 구간의 순서대로 위의 규칙에 따라 순서를 뒤집는 작업을 연속해서 처리한
# 뒤 마지막 카드들의 배치 를 구하는 프로그램을 작성하시오.


# 일단 위의 문제를 풀기위해
# 1~20에 해당하는 배열을 생성 한 뒤
# 주어진 범위 만큼 인덱싱 해서 해당 값들을 바꾸어주면 됨

# 값을 바꿀때는
# 해당 ((끝나는 범위 - 시작하는 범위) +1) // 2 를 할 경우
# 몇번 바꾸는 작업을 해야할지 나옴

import sys

# sys.stdin = open("input.txt", "rt")

ls = []  # 1 ~ 20 까지의 숫자가 담긴 배열
for i in range(1, 21):
    ls.append(i)

for _ in range(10):
    start, endd = map(int, input().split())
    count = ((endd - start) + 1) // 2
    # 위의 식은 만약 범위가 5 ~ 10 이라면
    # 바꿔야 할 값들은 5,6,7,8,9,10 6개 이며
    # 해당 값들이 바뀌는 횟수는 3번임
    # 즉 5->10 = 1번, 6 -> 9 = 2번, 7-> 8 = 3번

    for i in range(count):
        st = ls[start - 1 + i]  # st 변수에 바꿀값 할당
        ed = ls[endd - 1 - i]  # ed 변수에 바꿀값 할당
        ls[start - 1 + i] = ed
        ls[endd - 1 - i] = st
print(ls)
